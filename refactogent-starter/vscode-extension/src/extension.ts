import * as vscode from 'vscode';
import { spawn } from 'child_process';

function runCLI(args: string[], cwd?: string) {
  const cli = spawn('node', ['dist/index.js', ...args], { cwd: cwd ?? `${__dirname}/../../cli`, shell: false });
  let output = '';
  cli.stdout.on('data', (d) => output += d.toString());
  cli.stderr.on('data', (d) => output += d.toString());
  cli.on('close', (code) => {
    const ch = vscode.window.createOutputChannel('Refactogent');
    ch.appendLine(output);
    ch.show(true);
    if (code !== 0) vscode.window.showErrorMessage(`Refactogent CLI exited with code ${code}`);
  });
}

export function activate(context: vscode.ExtensionContext) {
  const cmds = [
    ['refacto.stabilize', () => runCLI(['stabilize', '--routes', '10'])],
    ['refacto.organizeOnly', () => runCLI(['plan', '--mode', 'organize-only'])],
    ['refacto.nameHygiene', () => runCLI(['plan', '--mode', 'name-hygiene'])],
    ['refacto.microSimplify', () => runCLI(['plan', '--mode', 'micro-simplify'])],
    ['refacto.publicSurface', () => vscode.window.showInformationMessage('Public surface map will be generated by the CLI (stub).')]
  ] as const;

  cmds.forEach(([name, fn]) => {
    const disposable = vscode.commands.registerCommand(name, fn);
    context.subscriptions.push(disposable);
  });
}

export function deactivate() {}
